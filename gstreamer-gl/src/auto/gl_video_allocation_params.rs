// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use ffi;
use glib::translate::*;
use glib_ffi;
use gobject_ffi;
use std::mem;
use std::ptr;

glib_wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct GLVideoAllocationParams(Boxed<ffi::GstGLVideoAllocationParams>);

    match fn {
        copy => |ptr| gobject_ffi::g_boxed_copy(ffi::gst_gl_video_allocation_params_get_type(), ptr as *mut _) as *mut ffi::GstGLVideoAllocationParams,
        free => |ptr| gobject_ffi::g_boxed_free(ffi::gst_gl_video_allocation_params_get_type(), ptr as *mut _),
        get_type => || ffi::gst_gl_video_allocation_params_get_type(),
    }
}

impl GLVideoAllocationParams {
    //pub fn new<'a, 'b, P: Into<Option<&'a /*Ignored*/gst::AllocationParams>>, Q: Into<Option<&'b /*Ignored*/gst_video::VideoAlignment>>>(context: &GLContext, alloc_params: P, v_info: /*Ignored*/&mut gst_video::VideoInfo, plane: u32, valign: Q, target: GLTextureTarget, tex_format: GLFormat) -> GLVideoAllocationParams {
    //    unsafe { TODO: call ffi::gst_gl_video_allocation_params_new() }
    //}

    //pub fn new_wrapped_data<'a, 'b, 'c, P: Into<Option<&'a /*Ignored*/gst::AllocationParams>>, Q: Into<Option<&'b /*Ignored*/gst_video::VideoAlignment>>, R: Into<Option</*Unimplemented*/Fundamental: Pointer>>, S: Into<Option<&'c /*Ignored*/glib::DestroyNotify>>>(context: &GLContext, alloc_params: P, v_info: /*Ignored*/&mut gst_video::VideoInfo, plane: u32, valign: Q, target: GLTextureTarget, tex_format: GLFormat, wrapped_data: R, notify: S) -> GLVideoAllocationParams {
    //    unsafe { TODO: call ffi::gst_gl_video_allocation_params_new_wrapped_data() }
    //}

    //pub fn new_wrapped_gl_handle<'a, 'b, 'c, P: Into<Option<&'a /*Ignored*/gst::AllocationParams>>, Q: Into<Option<&'b /*Ignored*/gst_video::VideoAlignment>>, R: Into<Option</*Unimplemented*/Fundamental: Pointer>>, S: Into<Option<&'c /*Ignored*/glib::DestroyNotify>>>(context: &GLContext, alloc_params: P, v_info: /*Ignored*/&mut gst_video::VideoInfo, plane: u32, valign: Q, target: GLTextureTarget, tex_format: GLFormat, gl_handle: R, notify: S) -> GLVideoAllocationParams {
    //    unsafe { TODO: call ffi::gst_gl_video_allocation_params_new_wrapped_gl_handle() }
    //}

    //pub fn new_wrapped_texture<'a, 'b, 'c, P: Into<Option<&'a /*Ignored*/gst::AllocationParams>>, Q: Into<Option<&'b /*Ignored*/gst_video::VideoAlignment>>, R: Into<Option<&'c /*Ignored*/glib::DestroyNotify>>>(context: &GLContext, alloc_params: P, v_info: /*Ignored*/&mut gst_video::VideoInfo, plane: u32, valign: Q, target: GLTextureTarget, tex_format: GLFormat, tex_id: u32, notify: R) -> GLVideoAllocationParams {
    //    unsafe { TODO: call ffi::gst_gl_video_allocation_params_new_wrapped_texture() }
    //}

    pub fn copy_data(&mut self, dest_vid: &mut GLVideoAllocationParams) {
        unsafe {
            ffi::gst_gl_video_allocation_params_copy_data(self.to_glib_none_mut().0, dest_vid.to_glib_none_mut().0);
        }
    }

    pub fn free_data(&mut self) {
        unsafe {
            ffi::gst_gl_video_allocation_params_free_data(self.to_glib_none_mut().0);
        }
    }

    //pub fn init_full<'a, 'b, 'c, P: Into<Option<&'a /*Ignored*/gst::AllocationParams>>, Q: Into<Option<&'b /*Ignored*/gst_video::VideoAlignment>>, R: Into<Option</*Unimplemented*/Fundamental: Pointer>>, S: Into<Option</*Unimplemented*/Fundamental: Pointer>>, T: Into<Option<&'c /*Ignored*/glib::DestroyNotify>>>(&mut self, struct_size: usize, alloc_flags: u32, copy: /*Unknown conversion*//*Unimplemented*/GLAllocationParamsCopyFunc, free: /*Unknown conversion*//*Unimplemented*/GLAllocationParamsFreeFunc, context: &GLContext, alloc_params: P, v_info: /*Ignored*/&mut gst_video::VideoInfo, plane: u32, valign: Q, target: GLTextureTarget, tex_format: GLFormat, wrapped_data: R, gl_handle: S, notify: T) -> bool {
    //    unsafe { TODO: call ffi::gst_gl_video_allocation_params_init_full() }
    //}
}

unsafe impl Send for GLVideoAllocationParams {}
unsafe impl Sync for GLVideoAllocationParams {}
