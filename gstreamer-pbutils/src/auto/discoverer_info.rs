// This file was generated by gir (e912ccf) from gir-files (???)
// DO NOT EDIT

use ffi;
use glib::object::IsA;
use glib::translate::*;
use glib_ffi;
use gobject_ffi;
use std::mem;
use std::ptr;

glib_wrapper! {
    pub struct DiscovererInfo(Object<ffi::GstDiscovererInfo>);

    match fn {
        get_type => || ffi::gst_discoverer_info_get_type(),
    }
}

impl DiscovererInfo {
    //pub fn from_variant(variant: /*Ignored*/&glib::Variant) -> Option<DiscovererInfo> {
    //    unsafe { TODO: call ffi::gst_discoverer_info_from_variant() }
    //}
}

unsafe impl Send for DiscovererInfo {}
unsafe impl Sync for DiscovererInfo {}

pub trait DiscovererInfoExt {
    fn copy(&self) -> Option<DiscovererInfo>;

    //fn get_audio_streams(&self) -> /*Ignored*/Vec<DiscovererStreamInfo>;

    //fn get_container_streams(&self) -> /*Ignored*/Vec<DiscovererStreamInfo>;

    //fn get_duration(&self) -> /*Ignored*/gst::ClockTime;

    //fn get_misc(&self) -> /*Ignored*/Option<gst::Structure>;

    fn get_missing_elements_installer_details(&self) -> Vec<String>;

    //fn get_result(&self) -> /*Ignored*/DiscovererResult;

    fn get_seekable(&self) -> bool;

    //fn get_stream_info(&self) -> /*Ignored*/Option<DiscovererStreamInfo>;

    //fn get_stream_list(&self) -> /*Ignored*/Vec<DiscovererStreamInfo>;

    //fn get_streams(&self, streamtype: glib::types::Type) -> /*Ignored*/Vec<DiscovererStreamInfo>;

    //fn get_subtitle_streams(&self) -> /*Ignored*/Vec<DiscovererStreamInfo>;

    //fn get_tags(&self) -> /*Ignored*/Option<gst::TagList>;

    //fn get_toc(&self) -> /*Ignored*/Option<gst::Toc>;

    fn get_uri(&self) -> Option<String>;

    //fn get_video_streams(&self) -> /*Ignored*/Vec<DiscovererStreamInfo>;

    //fn to_variant(&self, flags: /*Ignored*/DiscovererSerializeFlags) -> /*Ignored*/Option<glib::Variant>;
}

impl<O: IsA<DiscovererInfo>> DiscovererInfoExt for O {
    fn copy(&self) -> Option<DiscovererInfo> {
        unsafe {
            from_glib_full(ffi::gst_discoverer_info_copy(self.to_glib_none().0))
        }
    }

    //fn get_audio_streams(&self) -> /*Ignored*/Vec<DiscovererStreamInfo> {
    //    unsafe { TODO: call ffi::gst_discoverer_info_get_audio_streams() }
    //}

    //fn get_container_streams(&self) -> /*Ignored*/Vec<DiscovererStreamInfo> {
    //    unsafe { TODO: call ffi::gst_discoverer_info_get_container_streams() }
    //}

    //fn get_duration(&self) -> /*Ignored*/gst::ClockTime {
    //    unsafe { TODO: call ffi::gst_discoverer_info_get_duration() }
    //}

    //fn get_misc(&self) -> /*Ignored*/Option<gst::Structure> {
    //    unsafe { TODO: call ffi::gst_discoverer_info_get_misc() }
    //}

    fn get_missing_elements_installer_details(&self) -> Vec<String> {
        unsafe {
            FromGlibPtrContainer::from_glib_none(ffi::gst_discoverer_info_get_missing_elements_installer_details(self.to_glib_none().0))
        }
    }

    //fn get_result(&self) -> /*Ignored*/DiscovererResult {
    //    unsafe { TODO: call ffi::gst_discoverer_info_get_result() }
    //}

    fn get_seekable(&self) -> bool {
        unsafe {
            from_glib(ffi::gst_discoverer_info_get_seekable(self.to_glib_none().0))
        }
    }

    //fn get_stream_info(&self) -> /*Ignored*/Option<DiscovererStreamInfo> {
    //    unsafe { TODO: call ffi::gst_discoverer_info_get_stream_info() }
    //}

    //fn get_stream_list(&self) -> /*Ignored*/Vec<DiscovererStreamInfo> {
    //    unsafe { TODO: call ffi::gst_discoverer_info_get_stream_list() }
    //}

    //fn get_streams(&self, streamtype: glib::types::Type) -> /*Ignored*/Vec<DiscovererStreamInfo> {
    //    unsafe { TODO: call ffi::gst_discoverer_info_get_streams() }
    //}

    //fn get_subtitle_streams(&self) -> /*Ignored*/Vec<DiscovererStreamInfo> {
    //    unsafe { TODO: call ffi::gst_discoverer_info_get_subtitle_streams() }
    //}

    //fn get_tags(&self) -> /*Ignored*/Option<gst::TagList> {
    //    unsafe { TODO: call ffi::gst_discoverer_info_get_tags() }
    //}

    //fn get_toc(&self) -> /*Ignored*/Option<gst::Toc> {
    //    unsafe { TODO: call ffi::gst_discoverer_info_get_toc() }
    //}

    fn get_uri(&self) -> Option<String> {
        unsafe {
            from_glib_none(ffi::gst_discoverer_info_get_uri(self.to_glib_none().0))
        }
    }

    //fn get_video_streams(&self) -> /*Ignored*/Vec<DiscovererStreamInfo> {
    //    unsafe { TODO: call ffi::gst_discoverer_info_get_video_streams() }
    //}

    //fn to_variant(&self, flags: /*Ignored*/DiscovererSerializeFlags) -> /*Ignored*/Option<glib::Variant> {
    //    unsafe { TODO: call ffi::gst_discoverer_info_to_variant() }
    //}
}
